# Generated by Django 5.1.6 on 2025-04-09 21:26

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0006_alter_youtubevideo_class_subject'),
        ('users', '0016_add_status_to_student'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FeeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category_type', models.CharField(choices=[('TUITION', 'Tuition'), ('UNIFORM', 'Uniform'), ('BOOKS', 'Books'), ('PTA', 'PTA Dues'), ('SPORTS', 'Sports'), ('TECHNOLOGY', 'Technology'), ('TRANSPORTATION', 'Transportation'), ('FEEDING', 'Feeding'), ('EXAMINATION', 'Examination'), ('OTHER', 'Other')], default='TUITION', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_required', models.BooleanField(default=True, help_text='Whether this fee is mandatory for all students')),
                ('is_recurring', models.BooleanField(default=True, help_text='Whether this fee recurs every term')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Fee Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClassFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('due_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees', to='courses.classroom')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_fees', to=settings.AUTH_USER_MODEL)),
                ('fee_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_fees', to='fees.feecategory')),
            ],
            options={
                'ordering': ['term', 'classroom', 'fee_category'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField(default=django.utils.timezone.now)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('MOBILE_MONEY', 'Mobile Money'), ('BANK_TRANSFER', 'Bank Transfer'), ('CHEQUE', 'Cheque'), ('CARD', 'Card Payment'), ('OTHER', 'Other')], default='CASH', max_length=20)),
                ('transaction_id', models.CharField(blank=True, help_text='Reference number for the transaction', max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('received_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-payment_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_number', models.CharField(max_length=50, unique=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('printed', models.BooleanField(default=False)),
                ('last_printed_at', models.DateTimeField(blank=True, null=True)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_receipts', to=settings.AUTH_USER_MODEL)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='receipt', to='fees.payment')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='May differ from class fee if there are individual adjustments', max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PARTIALLY_PAID', 'Partially Paid'), ('PAID', 'Paid'), ('WAIVED', 'Waived'), ('OVERDUE', 'Overdue')], default='PENDING', max_length=20)),
                ('due_date', models.DateField()),
                ('last_payment_date', models.DateField(blank=True, null=True)),
                ('waiver_reason', models.TextField(blank=True, help_text='Reason if fee is waived', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_fee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_fees', to='fees.classfee')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees', to='users.student')),
            ],
            options={
                'ordering': ['due_date', 'student'],
                'unique_together': {('student', 'class_fee')},
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='student_fee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='fees.studentfee'),
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('academic_year', models.CharField(max_length=20)),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-academic_year', 'start_date'],
                'unique_together': {('name', 'academic_year')},
            },
        ),
        migrations.AddField(
            model_name='classfee',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_fees', to='fees.term'),
        ),
        migrations.AlterUniqueTogether(
            name='classfee',
            unique_together={('classroom', 'fee_category', 'term')},
        ),
    ]
