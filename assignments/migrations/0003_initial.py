# Generated by Django 5.1.6 on 2025-03-06 01:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assignments', '0002_initial'),
        ('courses', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='assignment',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_assignments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grade',
            name='class_subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='courses.classsubject'),
        ),
        migrations.AddField(
            model_name='grade',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades_given', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grade',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='users.student'),
        ),
        migrations.AddField(
            model_name='question',
            name='assignment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='assignments.assignment'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='assignments.question'),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='generated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_report_cards', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_cards', to='users.student'),
        ),
        migrations.AddField(
            model_name='studentanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answers', to='assignments.question'),
        ),
        migrations.AddField(
            model_name='studentanswer',
            name='selected_choice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='selections', to='assignments.choice'),
        ),
        migrations.AddField(
            model_name='studentsubmission',
            name='assignment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='assignments.assignment'),
        ),
        migrations.AddField(
            model_name='studentsubmission',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='users.student'),
        ),
        migrations.AddField(
            model_name='studentanswer',
            name='submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='assignments.studentsubmission'),
        ),
        migrations.AddField(
            model_name='grade',
            name='submission',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grade', to='assignments.studentsubmission'),
        ),
        migrations.AlterUniqueTogether(
            name='reportcard',
            unique_together={('student', 'term', 'academic_year')},
        ),
        migrations.AlterUniqueTogether(
            name='studentsubmission',
            unique_together={('student', 'assignment')},
        ),
    ]
