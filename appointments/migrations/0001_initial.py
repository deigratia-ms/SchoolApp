# Generated by Django 5.1.6 on 2025-04-17 13:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0017_alter_customuser_role_staffmember'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppointmentSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(max_length=255)),
                ('appointment_duration', models.IntegerField(default=30, help_text='Duration in minutes')),
                ('day_start_time', models.TimeField(default='09:00', help_text='Start time for appointments')),
                ('day_end_time', models.TimeField(default='15:00', help_text='End time for appointments')),
                ('excluded_hours', models.JSONField(blank=True, default=list, help_text='Hours to exclude from slot generation (e.g., lunch breaks)')),
                ('days_to_generate', models.IntegerField(default=14, help_text='Number of days to generate slots for')),
                ('slot_start_date', models.DateField(blank=True, help_text='Start date for slot generation (defaults to today if not set)', null=True)),
                ('slot_end_date', models.DateField(blank=True, help_text='End date for slot generation (defaults to start_date + days_to_generate if not set)', null=True)),
                ('excluded_days', models.JSONField(default=list, help_text='Days of week to exclude (0=Monday, 6=Sunday)')),
                ('auto_confirm_appointments', models.BooleanField(default=False, help_text='Automatically confirm appointments when booked')),
                ('default_appointment_purpose', models.CharField(default='Termly One-on-One Appointment', help_text='Default purpose for new appointments', max_length=255)),
                ('reminder_days', models.IntegerField(default=1, help_text='Days before appointment to send reminder')),
                ('system_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Appointment Settings',
                'verbose_name_plural': 'Appointment Settings',
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('reminder_3days_sent', models.BooleanField(default=False)),
                ('reminder_1day_sent', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='users.parent')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointments.timeslot')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
